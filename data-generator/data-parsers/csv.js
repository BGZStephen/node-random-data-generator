const Promise = require('bluebird')
const CarManufacturer = require('../data-types/car-manufacturer/model')
const User = require('../users/model')

let rawData = [
  '	A.D. Tramontana	'	,
  '	Acura	'	,
  '	Optimal Energy	'	,
  '	Perana	'	,
  '	Uri	'	,
  '	Alfa Romeo	'	,
  '	Amuza	'	,
  '	Arrinera	'	,
  '	ASL	'	,
  '	Asterio[1]	'	,
  '	Audi	'	,
  '	Bajaj	'	,
  '	Beijing Automotive	'	,
  '	BMW	'	,
  '	Bolloré	'	,
  '	Bolwell	'	,
  '	Brilliance	'	,
  '	BRM Buggy	'	,
  '	Buddy	'	,
  '	Bufori	'	,
  '	Bugatti	'	,
  '	BYD	'	,
  '	Carbontech[3]	'	,
  '	Carice[4]	'	,
  "	Chang'an	"	,
  '	Changhe	'	,
  '	Chery	'	,
  '	Citroën	'	,
  '	Covini	'	,
  '	Dacia	'	,
  '	Daihatsu	'	,
  '	De	'	,
  '	defunct	'	,
  '	Diardi	'	,
  '	Dongfeng	'	,
  '	Donkervoort	'	,
  '	Donto	'	,
  '	DS Automobiles	'	,
  '	Dynasti Electric	'	,
  '	E-Vade	'	,
  '	Effedi	'	,
  '	Egy-Tech Engineering	'	,
  '	Electric Raceabout	'	,
  '	Elfin	'	,
  '	Emgrand	'	,
  '	Englon	'	,
  '	Etox	'	,
  '	Exagon	'	,
  '	Faralli	'	,
  '	FAW	'	,
  '	Ferrari	'	,
  '	Fiat	'	,
  '	Foday	'	,
  '	Force	'	,
  '	Ford	'	,
  '	Fornasari	'	,
  '	GAC Group	'	,
  '	Geely	'	,
  '	Gillet	'	,
  '	GLM	'	,
  '	Gonow	'	,
  '	Great Wall	'	,
  '	GTA Motor	'	,
  '	Gumpert	'	,
  '	Hero	'	,
  '	Hindustan	'	,
  '	Holden	'	,
  '	Honda	'	,
  '	Hongqi	'	,
  '	Hradyesh	'	,
  '	HTT Technologies	'	,
  '	ICML	'	,
  '	IFR	'	,
  '	Imperia	'	,
  '	Infiniti	'	,
  '	Iran Khodro	'	,
  '	Isuzu	'	,
  '	IVM	'	,
  '	JAC	'	,
  '	Jetcar	'	,
  '	Jonway	'	,
  '	JOSS	'	,
  '	Kantanka	'	,
  '	Kiat	'	,
  '	AC	'	,
  '	Arash	'	,
  '	Ariel	'	,
  '	Ascari	'	,
  '	Aston Martin	'	,
  '	BAC	'	,
  '	Bentley	'	,
  '	Bristol	'	,
  '	British Leyland	'	,
  '	Brooke	'	,
  '	Caparo	'	,
  '	Connaught	'	,
  '	Eterniti	'	,
  '	Gibbs	'	,
  '	Ginetta	'	,
  '	Grinnall	'	,
  '	Invicta	'	,
  '	Jaguar	'	,
  '	Jensen Motors	'	,
  '	Land Rover	'	,
  '	Lightning	'	,
  '	Lister	'	,
  '	Lotus	'	,
  '	McLaren	'	,
  '	MG	'	,
  '	MINI	'	,
  '	Morgan	'	,
  '	Noble	'	,
  '	Radical	'	,
  '	Reliant	'	,
  '	Rolls-Royce	'	,
  '	Trident	'	,
  '	TVR	'	,
  '	Ultima	'	,
  '	Vauxhall	'	,
  '	Westfield	'	,
  '	Zenos	'	,
  '	Kish Khodro	'	,
  '	Koenigsegg	'	,
  '	Genesis	'	,
  '	Hyundai	'	,
  '	Kia	'	,
  '	Proto	'	,
  '	Samsung	'	,
  '	Ssangyong	'	,
  '	Korres	'	,
  '	KTM	'	,
  '	Lada	'	,
  '	Lamborghini	'	,
  '	Lancia	'	,
  '	Landwind	'	,
  '	Lanka Micro	'	,
  '	Laraki	'	,
  '	LeBlanc	'	,
  '	Leopard	'	,
  '	Lexus	'	,
  '	Lifan	'	,
  '	Lobini	'	,
  '	Lotec	'	,
  '	Luxgen	'	,
  '	Mahindra	'	,
  '	Marussia	'	,
  '	Maruti	'	,
  '	Maserati	'	,
  '	Mastretta	'	,
  '	Mazda	'	,
  '	Mercedes-Benz	'	,
  '	Mitsubishi	'	,
  '	Mitsuoka	'	,
  '	Mycar	'	,
  '	Nissan	'	,
  '	Nota	'	,
  '	Opel	'	,
  '	Orca	'	,
  '	P.G.O.	'	,
  '	Pagani	'	,
  '	Panhard	'	,
  '	Perodua	'	,
  '	Peugeot	'	,
  '	Porsche	'	,
  '	Proton	'	,
  '	Puritalia	'	,
  '	Qoros	'	,
  '	Qvale	'	,
  '	Renault	'	,
  '	Republic Kaipan	'	,
  '	Republic Škoda	'	,
  '	REVA	'	,
  '	Rimac	'	,
  '	Rinspeed	'	,
  '	Roding	'	,
  '	Roewe	'	,
  '	Rossin-Bertin	'	,
  '	SAIC-GM-Wuling	'	,
  '	SAIPA	'	,
  '	San	'	,
  '	Sbarro	'	,
  '	SEAT	'	,
  '	Shanghai Maple	'	,
  '	SIN	'	,
  '	Smart	'	,
  '	Spada	'	,
  '	Spyker	'	,
  '	AC Propulsion	'	,
  '	Anteros	'	,
  '	Buick	'	,
  '	Cadillac	'	,
  '	Chevrolet	'	,
  '	Chrysler	'	,
  '	Commuter Cars	'	,
  '	DMC	'	,
  '	Devon	'	,
  '	Dodge	'	,
  '	DeSoto	'	,
  '	Equus	'	,
  '	Fisker	'	,
  '	Ford	'	,
  '	Galpin	'	,
  '	GMC	'	,
  '	GreenTech Automotive	'	,
  '	Hennessey	'	,
  '	Jeep	'	,
  '	Karma	'	,
  '	Li-ion	'	,
  '	Lincoln	'	,
  '	Local Motors	'	,
  '	Lucra Cars	'	,
  '	Mullen	'	,
  '	Panoz	'	,
  '	Polarsun	'	,
  '	Plymouth	'	,
  '	Rossion	'	,
  '	Saleen	'	,
  '	SSC North America	'	,
  '	Street	'	,
  '	Tanom	'	,
  '	Tesla	'	,
  '	UEV	'	,
  '	Vector	'	,
  '	Xenia	'	,
  '	Youabian Puma	'	,
  '	Subaru	'	,
  '	Suzuki	'	,
  '	Tata	'	,
  '	Tauro	'	,
  '	Tawon	'	,
  '	TD Cars	'	,
  '	Thai Rung	'	,
  '	Toyota	'	,
  '	Troller	'	,
  '	Trumpchi	'	,
  '	Tushek	'	,
  '	TVS	'	,
  '	UMM	'	,
  '	Vencer	'	,
  '	Venirauto	'	,
  '	Venturi	'	,
  '	VEPR	'	,
  '	Volkswagen	'	,
  '	Volvo	'	,
  '	W Motors	'	,
  '	Wallyscar	'	,
  '	Wheego	'	,
  '	Wiesmann	'	,
  '	Yamaha	'	,
  '	YES!	'	,
  '	Zastava Automobiles	'	,
  '	Almac	'	,
  '	Alternative Cars	'	,
  '	Chevron	'	,
  '	Fraser	'	,
  '	Hulme	'	,
  '	Leitch	'	,
  '	Saker	'	,
  '	Trekka	'	,
  '	Cars	'	,
  '	Zenvo	'	,
  '	ZiL	'	,
  '	ZX Auto	'	,
]

module.exports.processData = () => {

  Promise.map(rawData, item => {
    let carManufacturerObject = new CarManufacturer({name: item.trim(), createdOn: new Date()})
    return CarManufacturer.create(carManufacturerObject)
    .then(result => {
      console.log(result)
    })
    .catch(error => {
      console.log(error)
    })
  }, {concurrency: 5})
  .then(console.log("process finished"))
}
